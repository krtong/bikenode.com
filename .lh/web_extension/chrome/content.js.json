{
    "sourceFile": "web_extension/chrome/content.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 11,
            "patches": [
                {
                    "date": 1740741138461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740741222940,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,40 @@\n+// content.js - This script runs on Craigslist pages to extract data\n+// It listens for messages from popup.js and converts page data to JSON\n+\n+// Listen for messages from popup.js\n+chrome.runtime.onMessage.addListener(\n+  function(request, sender, sendResponse) {\n+    if (request.action === \"convertToJson\") {\n+      try {\n+        // Extract data from Craigslist page\n+        const postData = extractCraigslistData();\n+        sendResponse({success: true, data: postData});\n+      } catch (error) {\n+        sendResponse({success: false, error: error.message});\n+      }\n+      return true; // Required for asynchronous sendResponse\n+    }\n+  }\n+);\n+\n+/**\n+ * Extracts relevant data from a Craigslist post\n+ * @returns {Object} Structured data from the Craigslist post\n+ */\n+function extractCraigslistData() {\n+  // Basic extraction - customize based on your needs\n+  const title = document.querySelector(\"#titletextonly\")?.textContent.trim() || \"\";\n+  const price = document.querySelector(\".price\")?.textContent.trim() || \"\";\n+  const postingBody = document.querySelector(\"#postingbody\")?.textContent.trim() || \"\";\n+  const images = Array.from(document.querySelectorAll(\".gallery img\"))\n+    .map(img => img.src);\n+  \n+  return {\n+    title,\n+    price,\n+    description: postingBody,\n+    images,\n+    url: window.location.href,\n+    timestamp: new Date().toISOString()\n+  };\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740771650329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,63 +1,23 @@\n // content.js - This script runs on Craigslist pages to extract data\n // It listens for messages from popup.js and converts page data to JSON\n \n-// Listen for messages from popup.js\n-chrome.runtime.onMessage.addListener(\n-  function(request, sender, sendResponse) {\n-    if (request.action === \"convertToJson\") {\n-      try {\n-        // Extract data from Craigslist page\n-        const postData = extractCraigslistData();\n-        sendResponse({success: true, data: postData});\n-      } catch (error) {\n-        sendResponse({success: false, error: error.message});\n-      }\n-      return true; // Required for asynchronous sendResponse\n+// Listen for messages from the popup\n+chrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {\n+  if (request.action === 'convertToJson') {\n+    try {\n+      const data = extractCraigslistData();\n+      sendResponse({success: true, data: data});\n+    } catch (error) {\n+      sendResponse({success: false, error: error.message});\n     }\n   }\n-);\n+  return true; // Keeps the message channel open for async responses\n+});\n \n-/**\n- * Extracts relevant data from a Craigslist post\n- * @returns {Object} Structured data from the Craigslist post\n- */\n+// Extract data from Craigslist page\n function extractCraigslistData() {\n-  // Basic extraction - customize based on your needs\n-  const title = document.querySelector(\"#titletextonly\")?.textContent.trim() || \"\";\n-  const price = document.querySelector(\".price\")?.textContent.trim() || \"\";\n-  const postingBody = document.querySelector(\"#postingbody\")?.textContent.trim() || \"\";\n-  const images = Array.from(document.querySelectorAll(\".gallery img\"))\n-    .map(img => img.src);\n-  \n-  return {\n-    title,\n-    price,\n-    description: postingBody,\n-    images,\n-    url: window.location.href,\n-    timestamp: new Date().toISOString()\n-  };\n-}\n-// content.js - This script runs on Craigslist pages to extract data\n-// It listens for messages from popup.js and converts page data to JSON\n-\n-// Listen for messages from popup.js\n-chrome.runtime.onMessage.addListener(\n-  function(request, sender, sendResponse) {\n-    if (request.action === \"convertToJson\") {\n-      try {\n-        // Extract data from Craigslist page\n-        const postData = extractCraigslistData();\n-        sendResponse({success: true, data: postData});\n-      } catch (error) {\n-        sendResponse({success: false, error: error.message});\n-      }\n-      return true; // Required for asynchronous sendResponse\n-    }\n-  }\n-);\n-\n+  // Post title\n /**\n  * Extracts relevant data from a Craigslist post\n  * @returns {Object} Structured data from the Craigslist post\n  */\n"
                },
                {
                    "date": 1740771655537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,20 +16,20 @@\n \n // Extract data from Craigslist page\n function extractCraigslistData() {\n   // Post title\n-/**\n- * Extracts relevant data from a Craigslist post\n- * @returns {Object} Structured data from the Craigslist post\n- */\n-function extractCraigslistData() {\n-  // Basic extraction - customize based on your needs\n-  const title = document.querySelector(\"#titletextonly\")?.textContent.trim() || \"\";\n-  const price = document.querySelector(\".price\")?.textContent.trim() || \"\";\n-  const postingBody = document.querySelector(\"#postingbody\")?.textContent.trim() || \"\";\n-  const images = Array.from(document.querySelectorAll(\".gallery img\"))\n-    .map(img => img.src);\n+  const title = document.querySelector('#titletextonly')?.textContent.trim() || '';\n   \n+  // Price\n+  const price = document.querySelector('.price')?.textContent.trim() || '';\n+  \n+  // Post time\n+  const postingTime = document.querySelector('.date.timeago')?.textContent.trim() || '';\n+  \n+  // Location\n+  const location = document.querySelector('.mapaddress')?.textContent.trim() || '';\n+  \n+  // Description\n   return {\n     title,\n     price,\n     description: postingBody,\n"
                },
                {
                    "date": 1740771661342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,13 +28,29 @@\n   // Location\n   const location = document.querySelector('.mapaddress')?.textContent.trim() || '';\n   \n   // Description\n-  return {\n-    title,\n-    price,\n-    description: postingBody,\n-    images,\n-    url: window.location.href,\n-    timestamp: new Date().toISOString()\n-  };\n-}\n\\ No newline at end of file\n+  const description = document.querySelector('#postingbody')?.textContent.trim() || '';\n+  \n+  // Images\n+  const imageUrls = [];\n+  const thumbs = document.querySelectorAll('.thumb img');\n+  thumbs.forEach(img => {\n+    // Convert thumbnail URL to full image URL\n+    if (img.src) {\n+      const fullImageUrl = img.src.replace('50x50c', '600x450');\n+      imageUrls.push(fullImageUrl);\n+    }\n+  });\n+  \n+  // Attributes/details (may vary based on category)\n+  const attributes = {};\n+  const attrGroups = document.querySelectorAll('.attrgroup');\n+  attrGroups.forEach(group => {\n+    const spans = group.querySelectorAll('span');\n+    spans.forEach(span => {\n+      const text = span.textContent.trim();\n+      if (text.includes(':')) {\n+        const [key, value] = text.split(':').map(item => item.trim());\n+        attributes[key] = value;\n+      } else if (text.length > 0) {\n+        // For attributes without key:value format\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740771673434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,5 +52,17 @@\n       if (text.includes(':')) {\n         const [key, value] = text.split(':').map(item => item.trim());\n         attributes[key] = value;\n       } else if (text.length > 0) {\n-        // For attributes without key:value format\n\\ No newline at end of file\n+        // For attributes without key:value format\n+        attributes[text] = true;\n+      }\n+    });\n+  });\n+  \n+  // Post ID from URL\n+  const postId = window.location.pathname.split('/').pop().split('.')[0];\n+  \n+  return {\n+    title,\n+    price,\n+    postingTime,\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740771696034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,5 +64,22 @@\n   \n   return {\n     title,\n     price,\n-    postingTime,\n\\ No newline at end of file\n+    postingTime,\n+    location,\n+    description,\n+    images: imageUrls,\n+    attributes,\n+    postId,\n+    url: window.location.href,\n+    extractedAt: new Date().toISOString()\n+  };\n+}\n+\n+describe('Content Script', () => {\n+  beforeEach(() => {\n+    // Mock DOM elements for testing\n+    document.body.innerHTML = `\n+      <div id=\"titletextonly\">2018 Trek Bike</div>\n+      <span class=\"price\">$500</span>\n+      <time class=\"date timeago\">2023-06-15</time>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740771701629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,5 +81,18 @@\n     // Mock DOM elements for testing\n     document.body.innerHTML = `\n       <div id=\"titletextonly\">2018 Trek Bike</div>\n       <span class=\"price\">$500</span>\n-      <time class=\"date timeago\">2023-06-15</time>\n\\ No newline at end of file\n+      <time class=\"date timeago\">2023-06-15</time>\n+      <div class=\"mapaddress\">123 Main St, City</div>\n+      <section id=\"postingbody\">Great condition Trek bike for sale.</section>\n+      <div id=\"thumbs\">\n+        <a class=\"thumb\" href=\"#\"><img src=\"https://images.craigslist.org/00101_abc123_50x50c.jpg\"></a>\n+        <a class=\"thumb\" href=\"#\"><img src=\"https://images.craigslist.org/00202_def456_50x50c.jpg\"></a>\n+      </div>\n+      <div class=\"attrgroup\">\n+        <span>make / manufacturer: Trek</span>\n+        <span>model name / number: FX</span>\n+        <span>bicycle type: hybrid</span>\n+      </div>\n+    `;\n+  });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740771950816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,23 +15,23 @@\n });\n \n // Extract data from Craigslist page\n function extractCraigslistData() {\n-  // Post title\n-  const title = document.querySelector('#titletextonly')?.textContent.trim() || '';\n-  \n-  // Price\n-  const price = document.querySelector('.price')?.textContent.trim() || '';\n-  \n-  // Post time\n-  const postingTime = document.querySelector('.date.timeago')?.textContent.trim() || '';\n-  \n-  // Location\n-  const location = document.querySelector('.mapaddress')?.textContent.trim() || '';\n-  \n-  // Description\n-  const description = document.querySelector('#postingbody')?.textContent.trim() || '';\n-  \n+  try {\n+    // Post title\n+    const title = document.querySelector('#titletextonly')?.textContent.trim() || '';\n+    \n+    if (!title) {\n+      throw new Error('Could not find post title - may not be a valid Craigslist post');\n+    }\n+    \n+    // Price\n+    const price = document.querySelector('.price')?.textContent.trim() || '';\n+    \n+    // Post time\n+    const postingTime = document.querySelector('.date.timeago')?.textContent.trim() || '';\n+    \n+    // Location\n   // Images\n   const imageUrls = [];\n   const thumbs = document.querySelectorAll('.thumb img');\n   thumbs.forEach(img => {\n@@ -73,26 +73,5 @@\n     postId,\n     url: window.location.href,\n     extractedAt: new Date().toISOString()\n   };\n-}\n-\n-describe('Content Script', () => {\n-  beforeEach(() => {\n-    // Mock DOM elements for testing\n-    document.body.innerHTML = `\n-      <div id=\"titletextonly\">2018 Trek Bike</div>\n-      <span class=\"price\">$500</span>\n-      <time class=\"date timeago\">2023-06-15</time>\n-      <div class=\"mapaddress\">123 Main St, City</div>\n-      <section id=\"postingbody\">Great condition Trek bike for sale.</section>\n-      <div id=\"thumbs\">\n-        <a class=\"thumb\" href=\"#\"><img src=\"https://images.craigslist.org/00101_abc123_50x50c.jpg\"></a>\n-        <a class=\"thumb\" href=\"#\"><img src=\"https://images.craigslist.org/00202_def456_50x50c.jpg\"></a>\n-      </div>\n-      <div class=\"attrgroup\">\n-        <span>make / manufacturer: Trek</span>\n-        <span>model name / number: FX</span>\n-        <span>bicycle type: hybrid</span>\n-      </div>\n-    `;\n-  });\n\\ No newline at end of file\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740771958373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,48 +30,57 @@\n     // Post time\n     const postingTime = document.querySelector('.date.timeago')?.textContent.trim() || '';\n     \n     // Location\n-  // Images\n-  const imageUrls = [];\n-  const thumbs = document.querySelectorAll('.thumb img');\n-  thumbs.forEach(img => {\n-    // Convert thumbnail URL to full image URL\n-    if (img.src) {\n-      const fullImageUrl = img.src.replace('50x50c', '600x450');\n-      imageUrls.push(fullImageUrl);\n-    }\n-  });\n-  \n-  // Attributes/details (may vary based on category)\n-  const attributes = {};\n-  const attrGroups = document.querySelectorAll('.attrgroup');\n-  attrGroups.forEach(group => {\n-    const spans = group.querySelectorAll('span');\n-    spans.forEach(span => {\n-      const text = span.textContent.trim();\n-      if (text.includes(':')) {\n-        const [key, value] = text.split(':').map(item => item.trim());\n-        attributes[key] = value;\n-      } else if (text.length > 0) {\n-        // For attributes without key:value format\n-        attributes[text] = true;\n+    const location = document.querySelector('.mapaddress')?.textContent.trim() || '';\n+    \n+    // Description\n+    const description = document.querySelector('#postingbody')?.textContent.trim() || '';\n+    \n+    // Images\n+    const imageUrls = [];\n+    const thumbs = document.querySelectorAll('.thumb img');\n+    thumbs.forEach(img => {\n+      // Convert thumbnail URL to full image URL\n+      if (img.src) {\n+        const fullImageUrl = img.src.replace('50x50c', '600x450');\n+        imageUrls.push(fullImageUrl);\n       }\n     });\n-  });\n-  \n-  // Post ID from URL\n-  const postId = window.location.pathname.split('/').pop().split('.')[0];\n-  \n-  return {\n-    title,\n-    price,\n-    postingTime,\n-    location,\n-    description,\n-    images: imageUrls,\n-    attributes,\n-    postId,\n-    url: window.location.href,\n-    extractedAt: new Date().toISOString()\n-  };\n+    \n+    // Attributes/details (may vary based on category)\n+    const attributes = {};\n+    const attrGroups = document.querySelectorAll('.attrgroup');\n+    attrGroups.forEach(group => {\n+      const spans = group.querySelectorAll('span');\n+      spans.forEach(span => {\n+        const text = span.textContent.trim();\n+        if (text.includes(':')) {\n+          const [key, value] = text.split(':').map(item => item.trim());\n+          attributes[key] = value;\n+        } else if (text.length > 0) {\n+          // For attributes without key:value format\n+          attributes[text] = true;\n+        }\n+      });\n+    });\n+    \n+    // Post ID from URL\n+    const postId = window.location.pathname.split('/').pop().split('.')[0];\n+    \n+    return {\n+      title,\n+      price,\n+      postingTime,\n+      location,\n+      description,\n+      images: imageUrls,\n+      attributes,\n+      postId,\n+      url: window.location.href,\n+      extractedAt: new Date().toISOString()\n+    };\n+  } catch (error) {\n+    console.error('Error extracting Craigslist data:', error);\n+    throw new Error(`Failed to extract data: ${error.message}`);\n+  }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740774172435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,5 +82,10 @@\n   } catch (error) {\n     console.error('Error extracting Craigslist data:', error);\n     throw new Error(`Failed to extract data: ${error.message}`);\n   }\n+}\n+\n+// Export for testing\n+if (typeof module !== 'undefined' && module.exports) {\n+  module.exports = { extractCraigslistData };\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740774364160,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,91 @@\n+// content.js - This script runs on Craigslist pages to extract data\n+// It listens for messages from popup.js and converts page data to JSON\n+\n+// Listen for messages from the popup\n+chrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {\n+  if (request.action === 'convertToJson') {\n+    try {\n+      const data = extractCraigslistData();\n+      sendResponse({success: true, data: data});\n+    } catch (error) {\n+      sendResponse({success: false, error: error.message});\n+    }\n+  }\n+  return true; // Keeps the message channel open for async responses\n+});\n+\n+// Extract data from Craigslist page\n+function extractCraigslistData() {\n+  try {\n+    // Post title\n+    const title = document.querySelector('#titletextonly')?.textContent.trim() || '';\n+    \n+    if (!title) {\n+      throw new Error('Could not find post title - may not be a valid Craigslist post');\n+    }\n+    \n+    // Price\n+    const price = document.querySelector('.price')?.textContent.trim() || '';\n+    \n+    // Post time\n+    const postingTime = document.querySelector('.date.timeago')?.textContent.trim() || '';\n+    \n+    // Location\n+    const location = document.querySelector('.mapaddress')?.textContent.trim() || '';\n+    \n+    // Description\n+    const description = document.querySelector('#postingbody')?.textContent.trim() || '';\n+    \n+    // Images\n+    const imageUrls = [];\n+    const thumbs = document.querySelectorAll('.thumb img');\n+    thumbs.forEach(img => {\n+      // Convert thumbnail URL to full image URL\n+      if (img.src) {\n+        const fullImageUrl = img.src.replace('50x50c', '600x450');\n+        imageUrls.push(fullImageUrl);\n+      }\n+    });\n+    \n+    // Attributes/details\n+    const attributes = {};\n+    const attrGroups = document.querySelectorAll('.attrgroup');\n+    attrGroups.forEach(group => {\n+      const spans = group.querySelectorAll('span');\n+      spans.forEach(span => {\n+        const text = span.textContent.trim();\n+        if (text.includes(':')) {\n+          const [key, value] = text.split(':').map(item => item.trim());\n+          attributes[key] = value;\n+        } else if (text.length > 0) {\n+          // For attributes without key:value format\n+          attributes[text] = true;\n+        }\n+      });\n+    });\n+    \n+    // Post ID from URL\n+    const postId = window.location.pathname.split('/').pop().split('.')[0];\n+    \n+    return {\n+      title,\n+      price,\n+      postingTime,\n+      location,\n+      description,\n+      images: imageUrls,\n+      attributes,\n+      postId,\n+      url: window.location.href,\n+      extractedAt: new Date().toISOString()\n+    };\n+  } catch (error) {\n+    console.error('Error extracting Craigslist data:', error);\n+    throw new Error(`Failed to extract data: ${error.message}`);\n+  }\n+}\n+\n+// Export for testing\n+if (typeof module !== 'undefined' && module.exports) {\n+  module.exports = { extractCraigslistData };\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1740741138461,
            "name": "Commit-0",
            "content": "// content.js - This script runs on Craigslist pages to extract data\n// It listens for messages from popup.js and converts page data to JSON\n\n// Listen for messages from popup.js\nchrome.runtime.onMessage.addListener(\n  function(request, sender, sendResponse) {\n    if (request.action === \"convertToJson\") {\n      try {\n        // Extract data from Craigslist page\n        const postData = extractCraigslistData();\n        sendResponse({success: true, data: postData});\n      } catch (error) {\n        sendResponse({success: false, error: error.message});\n      }\n      return true; // Required for asynchronous sendResponse\n    }\n  }\n);\n\n/**\n * Extracts relevant data from a Craigslist post\n * @returns {Object} Structured data from the Craigslist post\n */\nfunction extractCraigslistData() {\n  // Basic extraction - customize based on your needs\n  const title = document.querySelector(\"#titletextonly\")?.textContent.trim() || \"\";\n  const price = document.querySelector(\".price\")?.textContent.trim() || \"\";\n  const postingBody = document.querySelector(\"#postingbody\")?.textContent.trim() || \"\";\n  const images = Array.from(document.querySelectorAll(\".gallery img\"))\n    .map(img => img.src);\n  \n  return {\n    title,\n    price,\n    description: postingBody,\n    images,\n    url: window.location.href,\n    timestamp: new Date().toISOString()\n  };\n}"
        }
    ]
}