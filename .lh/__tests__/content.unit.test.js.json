{
    "sourceFile": "__tests__/content.unit.test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1740774329108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740784064472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n-// Import the function - modify content.js to properly export it\n-import { extractCraigslistData } from '../web_extension/chrome/content.js';\n+// Replace ES module imports with CommonJS require\n+const { extractCraigslistData } = require('../web_extension/chrome/content.js');\n \n describe('Content Script Unit Tests', () => {\n   beforeEach(() => {\n     // Mock DOM elements for testing\n"
                },
                {
                    "date": 1740792302997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,5 +46,41 @@\n     \n     // Should throw error for missing title\n     expect(() => extractCraigslistData()).toThrow('Could not find post title');\n   });\n+\n+  // Add these additional test cases\n+  test('handles listings with no images', () => {\n+    // Remove all image elements\n+    document.querySelectorAll('.thumb').forEach(el => el.remove());\n+    \n+    const result = extractCraigslistData();\n+    expect(result.images).toEqual([]);\n+    expect(result.title).toBe('2018 Trek Bike'); // Other data should still be present\n+  });\n+\n+  test('handles listings with varying attribute formats', () => {\n+    document.querySelector('.attrgroup').innerHTML = `\n+      <span>make / manufacturer: Trek</span>\n+      <span>condition: like new</span>\n+      <span>electric assist</span>\n+      <span>suspension: full</span>\n+    `;\n+    \n+    const result = extractCraigslistData();\n+    expect(result.attributes['make / manufacturer']).toBe('Trek');\n+    expect(result.attributes['condition']).toBe('like new');\n+    expect(result.attributes['electric assist']).toBe(true);\n+    expect(result.attributes['suspension']).toBe('full');\n+  });\n+\n+  test('handles different image URL formats', () => {\n+    document.querySelector('#thumbs').innerHTML = `\n+      <a class=\"thumb\" href=\"#\"><img src=\"https://images.craigslist.org/00101_abc123_50x50c.jpg\"></a>\n+      <a class=\"thumb\" href=\"#\"><img src=\"https://images.craigslist.org/00202_def456.jpg\"></a>\n+    `;\n+    \n+    const result = extractCraigslistData();\n+    expect(result.images[0]).toBe('https://images.craigslist.org/00101_abc123_600x450.jpg');\n+    expect(result.images[1]).toBe('https://images.craigslist.org/00202_def456.jpg');\n+  });\n });\n\\ No newline at end of file\n"
                }
            ],
            "date": 1740774329108,
            "name": "Commit-0",
            "content": "// Import the function - modify content.js to properly export it\nimport { extractCraigslistData } from '../web_extension/chrome/content.js';\n\ndescribe('Content Script Unit Tests', () => {\n  beforeEach(() => {\n    // Mock DOM elements for testing\n    document.body.innerHTML = `\n      <div id=\"titletextonly\">2018 Trek Bike</div>\n      <span class=\"price\">$500</span>\n      <time class=\"date timeago\">2023-06-15</time>\n      <div class=\"mapaddress\">123 Main St, City</div>\n      <section id=\"postingbody\">Great condition Trek bike for sale.</section>\n      <div id=\"thumbs\">\n        <a class=\"thumb\" href=\"#\"><img src=\"https://images.craigslist.org/00101_abc123_50x50c.jpg\"></a>\n        <a class=\"thumb\" href=\"#\"><img src=\"https://images.craigslist.org/00202_def456_50x50c.jpg\"></a>\n      </div>\n      <div class=\"attrgroup\">\n        <span>make / manufacturer: Trek</span>\n        <span>model name / number: FX</span>\n        <span>bicycle type: hybrid</span>\n      </div>\n    `;\n    \n    // Mock window.location\n    delete window.location;\n    window.location = {\n      href: 'https://craigslist.org/d/bicycles/12345.html',\n      pathname: '/d/bicycles/12345.html'\n    };\n  });\n\n  test('extractCraigslistData extracts correct information', () => {\n    const data = extractCraigslistData();\n    \n    expect(data.title).toBe('2018 Trek Bike');\n    expect(data.price).toBe('$500');\n    expect(data.location).toBe('123 Main St, City');\n    expect(data.attributes['make / manufacturer']).toBe('Trek');\n    expect(data.images).toBeDefined();\n    expect(data.postId).toBe('12345');\n  });\n  \n  test('handles missing elements gracefully', () => {\n    // Remove title element\n    document.querySelector('#titletextonly').remove();\n    \n    // Should throw error for missing title\n    expect(() => extractCraigslistData()).toThrow('Could not find post title');\n  });\n});"
        }
    ]
}