{
    "sourceFile": "__tests__/e2e.test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1740792326285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740795148360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n // For now, this is just a template for future reference\n \n const puppeteer = require('puppeteer');\n \n-describe('End-to-End Tests', () => {\n+describe.skip('End-to-End Tests', () => {\n   let browser;\n   let page;\n   \n   beforeAll(async () => {\n"
                }
            ],
            "date": 1740792326285,
            "name": "Commit-0",
            "content": "// This would require Puppeteer, which you had issues installing\n// For now, this is just a template for future reference\n\nconst puppeteer = require('puppeteer');\n\ndescribe('End-to-End Tests', () => {\n  let browser;\n  let page;\n  \n  beforeAll(async () => {\n    browser = await puppeteer.launch({\n      headless: false // Set to true for headless mode\n    });\n    page = await browser.newPage();\n  });\n  \n  afterAll(async () => {\n    await browser.close();\n  });\n  \n  test('Extension extracts data from Craigslist listing', async () => {\n    // Navigate to a mock Craigslist page or use a local HTML file\n    await page.goto('http://localhost:8080/mock-craigslist.html');\n    \n    // Mock the extension functionality\n    await page.evaluate(() => {\n      const data = extractCraigslistData();\n      window.extractedData = data;\n    });\n    \n    // Check the extracted data\n    const extractedData = await page.evaluate(() => window.extractedData);\n    expect(extractedData.title).toBe('Test Bike');\n    expect(extractedData.attributes).toBeDefined();\n  });\n});"
        }
    ]
}