---
layout: bikenode-main-layout-01/bikenode-main-layout-01.njk
title: Community Settings
subtitle: Configure your community preferences and features
breadcrumb:
  - { title: "Dashboard", url: "/dashboard/" }
  - { title: "Communities", url: "/communities-dashboard/" }
  - { title: "Settings" }
---

<div class="community-settings">
    <!-- General Settings -->
    <div class="settings-section">
        <div class="section-header">
            <h2>General Settings</h2>
            <p>Basic configuration for your community profile</p>
        </div>
        
        <div class="settings-card">
            <div class="setting-group">
                <label for="community-name">Community Name</label>
                <input type="text" id="community-name" value="Sport Bike Riders" class="setting-input">
                <small>This is how your community appears to other users</small>
            </div>
            
            <div class="setting-group">
                <label for="community-description">Description</label>
                <textarea id="community-description" class="setting-textarea" rows="3">A passionate community for sport bike enthusiasts, sharing tips, rides, and experiences.</textarea>
                <small>Briefly describe what your community is about</small>
            </div>
            
            <div class="setting-group">
                <label>Community Icon</label>
                <div class="icon-upload">
                    <div class="current-icon">üèçÔ∏è</div>
                    <div class="upload-controls">
                        <button class="btn-secondary small">Change Icon</button>
                        <button class="btn-tertiary small">Remove</button>
                    </div>
                </div>
                <small>Choose an emoji or upload a custom image</small>
            </div>
            
            <div class="setting-group">
                <label for="community-tags">Tags</label>
                <div class="tag-input-container">
                    <div class="current-tags">
                        <span class="tag">Sport Bikes<button class="remove-tag">√ó</button></span>
                        <span class="tag">Performance<button class="remove-tag">√ó</button></span>
                        <span class="tag">Track Days<button class="remove-tag">√ó</button></span>
                    </div>
                    <input type="text" id="community-tags" placeholder="Add a tag..." class="tag-input">
                </div>
                <small>Help others discover your community with relevant tags</small>
            </div>
        </div>
    </div>

    <!-- Privacy & Access -->
    <div class="settings-section">
        <div class="section-header">
            <h2>Privacy & Access</h2>
            <p>Control who can join and view your community</p>
        </div>
        
        <div class="settings-card">
            <div class="setting-group">
                <label>Community Type</label>
                <div class="radio-group">
                    <label class="radio-option">
                        <input type="radio" name="community-type" value="public" checked>
                        <div class="option-content">
                            <h4>üåê Public Community</h4>
                            <p>Anyone can discover and join this community</p>
                        </div>
                    </label>
                    <label class="radio-option">
                        <input type="radio" name="community-type" value="private">
                        <div class="option-content">
                            <h4>üîí Private Community</h4>
                            <p>Users must request to join or be invited</p>
                        </div>
                    </label>
                    <label class="radio-option">
                        <input type="radio" name="community-type" value="invite-only">
                        <div class="option-content">
                            <h4>üìß Invite Only</h4>
                            <p>Members can only join through invitations</p>
                        </div>
                    </label>
                </div>
            </div>
            
            <div class="setting-group">
                <div class="toggle-setting">
                    <div class="toggle-info">
                        <h4>Member Approval Required</h4>
                        <p>Manually approve new members before they can join</p>
                    </div>
                    <label class="toggle-switch">
                        <input type="checkbox">
                        <span class="slider"></span>
                    </label>
                </div>
            </div>
            
            <div class="setting-group">
                <div class="toggle-setting">
                    <div class="toggle-info">
                        <h4>Show Member Count</h4>
                        <p>Display the number of members publicly</p>
                    </div>
                    <label class="toggle-switch">
                        <input type="checkbox" checked>
                        <span class="slider"></span>
                    </label>
                </div>
            </div>
        </div>
    </div>

    <!-- Member Management -->
    <div class="settings-section">
        <div class="section-header">
            <h2>Member Management</h2>
            <p>Configure member roles and permissions</p>
        </div>
        
        <div class="settings-card">
            <div class="setting-group">
                <label>Default Member Role</label>
                <select class="setting-select">
                    <option value="member">Member</option>
                    <option value="rider">Rider</option>
                    <option value="enthusiast">Enthusiast</option>
                    <option value="custom">Custom Role</option>
                </select>
                <small>Role automatically assigned to new members</small>
            </div>
            
            <div class="setting-group">
                <div class="toggle-setting">
                    <div class="toggle-info">
                        <h4>Auto-assign Bike Roles</h4>
                        <p>Automatically assign roles based on members' bikes</p>
                    </div>
                    <label class="toggle-switch">
                        <input type="checkbox" checked>
                        <span class="slider"></span>
                    </label>
                </div>
            </div>
            
            <div class="setting-group">
                <label>Member Limits</label>
                <div class="limit-controls">
                    <div class="limit-option">
                        <label>
                            <input type="radio" name="member-limit" value="unlimited" checked>
                            Unlimited members
                        </label>
                    </div>
                    <div class="limit-option">
                        <label>
                            <input type="radio" name="member-limit" value="limited">
                            Limited to
                        </label>
                        <input type="number" value="1000" min="1" max="10000" class="limit-input">
                        <span>members</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Content & Features -->
    <div class="settings-section">
        <div class="section-header">
            <h2>Content & Features</h2>
            <p>Customize community features and content policies</p>
        </div>
        
        <div class="settings-card">
            <div class="setting-group">
                <div class="toggle-setting">
                    <div class="toggle-info">
                        <h4>Enable Virtual Garage Sharing</h4>
                        <p>Allow members to share their bike collections</p>
                    </div>
                    <label class="toggle-switch">
                        <input type="checkbox" checked>
                        <span class="slider"></span>
                    </label>
                </div>
            </div>
            
            <div class="setting-group">
                <div class="toggle-setting">
                    <div class="toggle-info">
                        <h4>Enable Events & Meetups</h4>
                        <p>Allow members to create and join community events</p>
                    </div>
                    <label class="toggle-switch">
                        <input type="checkbox" checked>
                        <span class="slider"></span>
                    </label>
                </div>
            </div>
            
            <div class="setting-group">
                <div class="toggle-setting">
                    <div class="toggle-info">
                        <h4>Content Moderation</h4>
                        <p>Require moderator approval for posts and images</p>
                    </div>
                    <label class="toggle-switch">
                        <input type="checkbox">
                        <span class="slider"></span>
                    </label>
                </div>
            </div>
            
            <div class="setting-group">
                <label>Community Guidelines</label>
                <textarea class="setting-textarea" rows="4" placeholder="Enter community guidelines and rules...">1. Be respectful to all members
2. Share relevant bike content only
3. No spam or promotional content
4. Keep discussions focused on biking topics</textarea>
                <small>Rules and guidelines for community members</small>
            </div>
        </div>
    </div>

    <!-- Save Actions -->
    <div class="settings-actions">
        <button class="btn-primary">Save All Changes</button>
        <button class="btn-secondary">Reset to Defaults</button>
        <button class="btn-danger">Delete Community</button>
    </div>
</div>

<style>
.community-settings {
    max-width: 800px;
}

.settings-section {
    margin-bottom: 40px;
}

.section-header {
    margin-bottom: 24px;
}

.section-header h2 {
    color: var(--text-primary);
    font-size: 1.25rem;
    font-weight: 600;
    margin-bottom: 8px;
}

.section-header p {
    color: var(--text-secondary);
    font-size: 0.9rem;
}

.settings-card {
    background: var(--card-bg);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 12px;
    padding: 24px;
}

.setting-group {
    margin-bottom: 24px;
}

.setting-group:last-child {
    margin-bottom: 0;
}

.setting-group label {
    display: block;
    color: var(--text-primary);
    font-weight: 500;
    margin-bottom: 8px;
    font-size: 0.9rem;
}

.setting-input,
.setting-select,
.setting-textarea {
    width: 100%;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.2);
    color: var(--text-primary);
    padding: 12px 16px;
    border-radius: 8px;
    font-size: 14px;
    transition: border-color 0.2s ease;
}

.setting-input:focus,
.setting-select:focus,
.setting-textarea:focus {
    outline: none;
    border-color: var(--accent);
}

.setting-group small {
    display: block;
    color: var(--text-secondary);
    font-size: 0.8rem;
    margin-top: 6px;
}

.icon-upload {
    display: flex;
    align-items: center;
    gap: 16px;
}

.current-icon {
    font-size: 3rem;
    background: rgba(88, 101, 242, 0.1);
    padding: 16px;
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.upload-controls {
    display: flex;
    gap: 8px;
}

.tag-input-container {
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 8px;
    padding: 8px;
    background: rgba(255, 255, 255, 0.05);
}

.current-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    margin-bottom: 8px;
}

.tag {
    background: var(--accent);
    color: white;
    padding: 4px 8px;
    border-radius: 12px;
    font-size: 0.8rem;
    display: flex;
    align-items: center;
    gap: 6px;
}

.remove-tag {
    background: none;
    border: none;
    color: white;
    cursor: pointer;
    font-size: 14px;
    padding: 0;
    width: 16px;
    height: 16px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.tag-input {
    width: 100%;
    background: transparent;
    border: none;
    color: var(--text-primary);
    padding: 4px 0;
    font-size: 14px;
}

.tag-input:focus {
    outline: none;
}

.radio-group {
    display: flex;
    flex-direction: column;
    gap: 12px;
}

.radio-option {
    background: rgba(255, 255, 255, 0.02);
    border: 2px solid rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    padding: 16px;
    cursor: pointer;
    transition: all 0.2s ease;
    display: block;
}

.radio-option:hover {
    border-color: var(--accent);
    background: rgba(88, 101, 242, 0.05);
}

.radio-option input:checked + .option-content h4 {
    color: var(--accent);
}

.radio-option input {
    display: none;
}

.option-content h4 {
    color: var(--text-primary);
    margin: 0 0 6px 0;
    font-size: 0.9rem;
    font-weight: 500;
}

.option-content p {
    color: var(--text-secondary);
    margin: 0;
    font-size: 0.8rem;
}

.toggle-setting {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 24px;
}

.toggle-info h4 {
    color: var(--text-primary);
    margin: 0 0 4px 0;
    font-size: 0.9rem;
    font-weight: 500;
}

.toggle-info p {
    color: var(--text-secondary);
    margin: 0;
    font-size: 0.8rem;
}

.toggle-switch {
    position: relative;
    width: 44px;
    height: 24px;
    flex-shrink: 0;
}

.toggle-switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(255, 255, 255, 0.2);
    transition: 0.2s;
    border-radius: 24px;
}

.slider:before {
    position: absolute;
    content: "";
    height: 18px;
    width: 18px;
    left: 3px;
    bottom: 3px;
    background-color: white;
    transition: 0.2s;
    border-radius: 50%;
}

input:checked + .slider {
    background-color: var(--accent);
}

input:checked + .slider:before {
    transform: translateX(20px);
}

.limit-controls {
    display: flex;
    flex-direction: column;
    gap: 12px;
}

.limit-option {
    display: flex;
    align-items: center;
    gap: 12px;
}

.limit-option label {
    display: flex;
    align-items: center;
    gap: 8px;
    margin: 0;
    font-weight: normal;
}

.limit-input {
    width: 80px;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.2);
    color: var(--text-primary);
    padding: 6px 10px;
    border-radius: 6px;
    font-size: 13px;
}

.settings-actions {
    display: flex;
    gap: 16px;
    padding-top: 24px;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
}

.btn-tertiary {
    background: transparent;
    color: var(--text-secondary);
    border: 1px solid rgba(255, 255, 255, 0.2);
    padding: 8px 16px;
    border-radius: 6px;
    cursor: pointer;
    font-size: 14px;
    transition: all 0.2s ease;
}

.btn-tertiary:hover {
    color: var(--text-primary);
    border-color: rgba(255, 255, 255, 0.4);
}

.btn-danger {
    background: #dc2626;
    color: white;
    border: none;
    padding: 12px 24px;
    border-radius: 8px;
    cursor: pointer;
    font-size: 14px;
    font-weight: 500;
    transition: background 0.2s ease;
}

.btn-danger:hover {
    background: #b91c1c;
}

@media (max-width: 768px) {
    .toggle-setting {
        flex-direction: column;
        align-items: flex-start;
        gap: 12px;
    }
    
    .settings-actions {
        flex-direction: column;
    }
    
    .icon-upload {
        flex-direction: column;
        align-items: flex-start;
    }
}
</style>

<script>
// Tag management
document.getElementById('community-tags').addEventListener('keypress', function(e) {
    if (e.key === 'Enter' || e.key === ',') {
        e.preventDefault();
        const tagText = this.value.trim();
        if (tagText) {
            addTag(tagText);
            this.value = '';
        }
    }
});

function addTag(text) {
    const tagsContainer = document.querySelector('.current-tags');
    const tag = document.createElement('span');
    tag.className = 'tag';
    tag.innerHTML = `${text}<button class="remove-tag" onclick="removeTag(this)">√ó</button>`;
    tagsContainer.appendChild(tag);
}

function removeTag(button) {
    button.parentElement.remove();
}

// Save settings
document.querySelector('.btn-primary').addEventListener('click', function() {
    // Simulate saving
    this.textContent = 'Saving...';
    this.disabled = true;
    
    setTimeout(() => {
        this.textContent = 'Settings Saved!';
        setTimeout(() => {
            this.textContent = 'Save All Changes';
            this.disabled = false;
        }, 2000);
    }, 1000);
});

// Delete community confirmation
document.querySelector('.btn-danger').addEventListener('click', function(e) {
    e.preventDefault();
    if (confirm('Are you sure you want to delete this community? This action cannot be undone.')) {
        alert('Community deletion would be processed here');
    }
});
</script>