---
layout: main
title: Search - BikeNode
description: Search bikes, communities, and riders on BikeNode
---

<section class="search-page">
    <div class="container">
        <div class="search-header">
            <h1>Discover Everything BikeNode</h1>
            <p>Search through thousands of bikes, active communities, and fellow riders</p>
        </div>
        
        <!-- Search Bar -->
        <div class="search-container">
            <form id="searchForm" class="search-form">
                <div class="search-input-group">
                    <input 
                        type="search" 
                        id="searchInput" 
                        name="q" 
                        placeholder="Search bikes, brands, communities, or riders..." 
                        class="search-input"
                        autocomplete="off"
                        autofocus
                    >
                    <button type="submit" class="search-button">
                        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <circle cx="11" cy="11" r="8"></circle>
                            <path d="m21 21-4.35-4.35"></path>
                        </svg>
                    </button>
                </div>
                
                <!-- Search Filters -->
                <div class="search-filters">
                    <div class="filter-tabs">
                        <button type="button" class="filter-tab active" data-filter="all">All</button>
                        <button type="button" class="filter-tab" data-filter="bikes">Bikes</button>
                        <button type="button" class="filter-tab" data-filter="motorcycles">Motorcycles</button>
                        <button type="button" class="filter-tab" data-filter="communities">Communities</button>
                        <button type="button" class="filter-tab" data-filter="riders">Riders</button>
                    </div>
                    
                    <button type="button" class="advanced-filters-toggle">
                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <line x1="4" y1="21" x2="4" y2="14"></line>
                            <line x1="4" y1="10" x2="4" y2="3"></line>
                            <line x1="12" y1="21" x2="12" y2="12"></line>
                            <line x1="12" y1="8" x2="12" y2="3"></line>
                            <line x1="20" y1="21" x2="20" y2="16"></line>
                            <line x1="20" y1="12" x2="20" y2="3"></line>
                            <line x1="1" y1="14" x2="7" y2="14"></line>
                            <line x1="9" y1="8" x2="15" y2="8"></line>
                            <line x1="17" y1="16" x2="23" y2="16"></line>
                        </svg>
                        Advanced Filters
                    </button>
                </div>
                
                <!-- Advanced Filters Panel -->
                <div class="advanced-filters-panel" id="advancedFilters" style="display: none;">
                    <div class="filters-grid">
                        <div class="filter-group">
                            <label>Year Range</label>
                            <div class="range-inputs">
                                <input type="number" name="yearFrom" placeholder="From" min="1900" max="2025">
                                <span>-</span>
                                <input type="number" name="yearTo" placeholder="To" min="1900" max="2025">
                            </div>
                        </div>
                        
                        <div class="filter-group">
                            <label>Price Range</label>
                            <div class="range-inputs">
                                <input type="number" name="priceFrom" placeholder="Min" min="0">
                                <span>-</span>
                                <input type="number" name="priceTo" placeholder="Max" min="0">
                            </div>
                        </div>
                        
                        <div class="filter-group">
                            <label>Type</label>
                            <select name="type">
                                <option value="">All Types</option>
                                <option value="sport">Sport</option>
                                <option value="cruiser">Cruiser</option>
                                <option value="touring">Touring</option>
                                <option value="adventure">Adventure</option>
                                <option value="mountain">Mountain</option>
                                <option value="road">Road</option>
                                <option value="electric">Electric</option>
                            </select>
                        </div>
                        
                        <div class="filter-group">
                            <label>Brand</label>
                            <select name="brand">
                                <option value="">All Brands</option>
                                <option value="yamaha">Yamaha</option>
                                <option value="honda">Honda</option>
                                <option value="kawasaki">Kawasaki</option>
                                <option value="trek">Trek</option>
                                <option value="specialized">Specialized</option>
                                <option value="giant">Giant</option>
                            </select>
                        </div>
                    </div>
                    
                    <div class="filter-actions">
                        <button type="button" class="btn-secondary" id="clearFilters">Clear Filters</button>
                        <button type="submit" class="btn-primary">Apply Filters</button>
                    </div>
                </div>
            </form>
        </div>
        
        <!-- Search Results -->
        <div class="search-results" id="searchResults">
            <!-- Popular searches shown by default -->
            <div class="popular-searches">
                <h2>Popular Searches</h2>
                <div class="popular-grid">
                    <a href="/search?q=yamaha+r1" class="popular-item">
                        <span class="popular-icon">üèçÔ∏è</span>
                        <span>Yamaha R1</span>
                    </a>
                    <a href="/search?q=trek+fuel" class="popular-item">
                        <span class="popular-icon">üöµ</span>
                        <span>Trek Fuel</span>
                    </a>
                    <a href="/search?q=sport+bikes" class="popular-item">
                        <span class="popular-icon">üèÅ</span>
                        <span>Sport Bikes</span>
                    </a>
                    <a href="/search?q=electric+bikes" class="popular-item">
                        <span class="popular-icon">‚ö°</span>
                        <span>Electric Bikes</span>
                    </a>
                    <a href="/search?q=mountain+bike+communities" class="popular-item">
                        <span class="popular-icon">üë•</span>
                        <span>Mountain Bike Communities</span>
                    </a>
                    <a href="/search?q=beginner+friendly" class="popular-item">
                        <span class="popular-icon">üåü</span>
                        <span>Beginner Friendly</span>
                    </a>
                </div>
            </div>
            
            <!-- Dynamic results will be inserted here -->
            <div id="dynamicResults"></div>
        </div>
    </div>
</section>

<style>
.search-page {
    min-height: calc(100vh - 120px);
    padding: 40px 0;
}

.search-header {
    text-align: center;
    margin-bottom: 40px;
}

.search-header h1 {
    color: var(--text-primary);
    font-size: 2.5rem;
    font-weight: 700;
    margin: 0 0 12px 0;
}

.search-header p {
    color: var(--text-secondary);
    font-size: 1.125rem;
}

.search-container {
    max-width: 800px;
    margin: 0 auto 60px;
}

.search-form {
    background: var(--card-bg);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 16px;
    padding: 24px;
}

.search-input-group {
    display: flex;
    position: relative;
    margin-bottom: 20px;
}

.search-input {
    flex: 1;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 12px;
    padding: 16px 50px 16px 20px;
    font-size: 1.125rem;
    color: var(--text-primary);
    transition: all 0.2s ease;
}

.search-input:focus {
    outline: none;
    border-color: var(--accent);
    background: rgba(255, 255, 255, 0.08);
}

.search-button {
    position: absolute;
    right: 4px;
    top: 50%;
    transform: translateY(-50%);
    background: var(--accent);
    border: none;
    border-radius: 8px;
    padding: 12px;
    cursor: pointer;
    color: white;
    transition: background 0.2s ease;
}

.search-button:hover {
    background: var(--accent-hover);
}

.search-filters {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 20px;
}

.filter-tabs {
    display: flex;
    gap: 8px;
}

.filter-tab {
    background: transparent;
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    padding: 8px 16px;
    color: var(--text-secondary);
    cursor: pointer;
    transition: all 0.2s ease;
}

.filter-tab:hover {
    border-color: rgba(255, 255, 255, 0.2);
    color: var(--text-primary);
}

.filter-tab.active {
    background: var(--accent);
    border-color: var(--accent);
    color: white;
}

.advanced-filters-toggle {
    display: flex;
    align-items: center;
    gap: 8px;
    background: transparent;
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    padding: 8px 16px;
    color: var(--text-secondary);
    cursor: pointer;
    transition: all 0.2s ease;
}

.advanced-filters-toggle:hover {
    border-color: rgba(255, 255, 255, 0.2);
    color: var(--text-primary);
}

.advanced-filters-panel {
    margin-top: 24px;
    padding-top: 24px;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
}

.filters-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 20px;
    margin-bottom: 24px;
}

.filter-group label {
    display: block;
    color: var(--text-secondary);
    font-size: 0.875rem;
    margin-bottom: 8px;
}

.filter-group input,
.filter-group select {
    width: 100%;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    padding: 10px 12px;
    color: var(--text-primary);
}

.range-inputs {
    display: flex;
    align-items: center;
    gap: 8px;
}

.range-inputs input {
    flex: 1;
}

.range-inputs span {
    color: var(--text-secondary);
}

.filter-actions {
    display: flex;
    justify-content: flex-end;
    gap: 12px;
}

.popular-searches {
    text-align: center;
}

.popular-searches h2 {
    color: var(--text-primary);
    font-size: 1.5rem;
    margin-bottom: 32px;
}

.popular-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 16px;
    max-width: 800px;
    margin: 0 auto;
}

.popular-item {
    display: flex;
    align-items: center;
    gap: 12px;
    background: var(--card-bg);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 12px;
    padding: 16px 20px;
    text-decoration: none;
    color: var(--text-primary);
    transition: all 0.2s ease;
}

.popular-item:hover {
    border-color: var(--accent);
    transform: translateY(-2px);
}

.popular-icon {
    font-size: 1.5rem;
}

/* Results styling */
.result-item {
    background: var(--card-bg);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 12px;
    padding: 20px;
    margin-bottom: 16px;
    transition: all 0.2s ease;
}

.result-item:hover {
    border-color: rgba(255, 255, 255, 0.2);
}

.loading {
    text-align: center;
    color: var(--text-secondary);
    padding: 40px;
}

@media (max-width: 768px) {
    .search-filters {
        flex-direction: column;
        align-items: stretch;
    }
    
    .filter-tabs {
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
    }
    
    .popular-grid {
        grid-template-columns: 1fr;
    }
}
</style>

<script>
// Search functionality
const searchForm = document.getElementById('searchForm');
const searchInput = document.getElementById('searchInput');
const filterTabs = document.querySelectorAll('.filter-tab');
const advancedToggle = document.querySelector('.advanced-filters-toggle');
const advancedPanel = document.getElementById('advancedFilters');
const dynamicResults = document.getElementById('dynamicResults');
const popularSearches = document.querySelector('.popular-searches');

// Toggle advanced filters
advancedToggle.addEventListener('click', () => {
    const isVisible = advancedPanel.style.display !== 'none';
    advancedPanel.style.display = isVisible ? 'none' : 'block';
    advancedToggle.classList.toggle('active');
});

// Filter tab switching
filterTabs.forEach(tab => {
    tab.addEventListener('click', () => {
        filterTabs.forEach(t => t.classList.remove('active'));
        tab.classList.add('active');
    });
});

// Clear filters
document.getElementById('clearFilters').addEventListener('click', () => {
    const inputs = advancedPanel.querySelectorAll('input, select');
    inputs.forEach(input => {
        if (input.type === 'number' || input.type === 'text') {
            input.value = '';
        } else if (input.tagName === 'SELECT') {
            input.selectedIndex = 0;
        }
    });
});

// Search form submission
searchForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const query = searchInput.value.trim();
    if (!query) return;
    
    // Hide popular searches, show loading
    popularSearches.style.display = 'none';
    dynamicResults.innerHTML = '<div class="loading">Searching...</div>';
    
    // Get active filter
    const activeFilter = document.querySelector('.filter-tab.active').dataset.filter;
    
    // Build search parameters
    const formData = new FormData(searchForm);
    const searchParams = new URLSearchParams();
    
    searchParams.append('q', query);
    searchParams.append('filter', activeFilter);
    
    // Add advanced filters if panel is open
    if (advancedPanel.style.display !== 'none') {
        for (const [key, value] of formData) {
            if (value && key !== 'q') {
                searchParams.append(key, value);
            }
        }
    }
    
    try {
        const response = await fetch(`/api/search?${searchParams}`);
        const results = await response.json();
        
        displayResults(results);
    } catch (error) {
        console.error('Search error:', error);
        dynamicResults.innerHTML = '<div class="loading">Error performing search. Please try again.</div>';
    }
});

// Display search results
function displayResults(results) {
    if (results.length === 0) {
        dynamicResults.innerHTML = `
            <div class="no-results">
                <p>No results found. Try adjusting your search or filters.</p>
            </div>
        `;
        return;
    }
    
    const resultsHTML = results.map(result => {
        if (result.type === 'bike' || result.type === 'motorcycle') {
            return `
                <div class="result-item">
                    <a href="/bike-details/${result.id}/" class="result-link">
                        <div class="result-header">
                            <h3>${result.year} ${result.make} ${result.model}</h3>
                            <span class="result-type">${result.type}</span>
                        </div>
                        <div class="result-details">
                            <span>${result.category}</span>
                            <span>‚Ä¢</span>
                            <span>${result.engine || 'N/A'}</span>
                            ${result.price ? `<span>‚Ä¢</span><span>$${result.price.toLocaleString()}</span>` : ''}
                        </div>
                    </a>
                </div>
            `;
        } else if (result.type === 'community') {
            return `
                <div class="result-item">
                    <a href="/community/${result.slug}/" class="result-link">
                        <div class="result-header">
                            <h3>${result.name}</h3>
                            <span class="result-type">Community</span>
                        </div>
                        <div class="result-details">
                            <span>${result.memberCount} members</span>
                            <span>‚Ä¢</span>
                            <span>${result.category}</span>
                        </div>
                        <p class="result-description">${result.description}</p>
                    </a>
                </div>
            `;
        } else if (result.type === 'rider') {
            return `
                <div class="result-item">
                    <a href="/user-profile/${result.username}/" class="result-link">
                        <div class="result-header">
                            <h3>${result.displayName}</h3>
                            <span class="result-type">Rider</span>
                        </div>
                        <div class="result-details">
                            <span>${result.bikeCount} bikes</span>
                            <span>‚Ä¢</span>
                            <span>Joined ${result.joinDate}</span>
                        </div>
                    </a>
                </div>
            `;
        }
    }).join('');
    
    dynamicResults.innerHTML = `
        <div class="results-header">
            <h2>Search Results</h2>
            <span class="result-count">${results.length} results found</span>
        </div>
        <div class="results-list">
            ${resultsHTML}
        </div>
    `;
}

// Check for search query in URL on page load
window.addEventListener('load', () => {
    const urlParams = new URLSearchParams(window.location.search);
    const query = urlParams.get('q');
    
    if (query) {
        searchInput.value = query;
        searchForm.dispatchEvent(new Event('submit'));
    }
});

// Additional styles for results
const style = document.createElement('style');
style.textContent = `
    .results-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 24px;
    }
    
    .results-header h2 {
        color: var(--text-primary);
        font-size: 1.5rem;
        margin: 0;
    }
    
    .result-count {
        color: var(--text-secondary);
        font-size: 0.875rem;
    }
    
    .result-link {
        display: block;
        text-decoration: none;
        color: inherit;
    }
    
    .result-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 8px;
    }
    
    .result-header h3 {
        color: var(--text-primary);
        font-size: 1.125rem;
        margin: 0;
    }
    
    .result-type {
        background: rgba(88, 101, 242, 0.1);
        color: var(--accent);
        padding: 4px 12px;
        border-radius: 6px;
        font-size: 0.75rem;
        font-weight: 500;
    }
    
    .result-details {
        color: var(--text-secondary);
        font-size: 0.875rem;
        display: flex;
        gap: 8px;
    }
    
    .result-description {
        color: var(--text-secondary);
        font-size: 0.875rem;
        margin: 8px 0 0 0;
        line-height: 1.5;
    }
    
    .no-results {
        text-align: center;
        padding: 60px 20px;
        color: var(--text-secondary);
    }
    
    .advanced-filters-toggle.active {
        background: rgba(88, 101, 242, 0.1);
        border-color: var(--accent);
        color: var(--accent);
    }
`;
document.head.appendChild(style);
</script>