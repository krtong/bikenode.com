---
layout: bikenode-main-layout-01/bikenode-main-layout-01.njk
title: Server Settings
subtitle: Configure BikeNode bot settings and preferences for your Discord server
---

<div class="settings-content">
    <!-- Server Info Header -->
    <div class="server-info-header">
        <div class="server-display">
            <div class="server-icon-large">SB</div>
            <div class="server-details">
                <h2>Sport Bike Riders</h2>
                <p>1,234 members ‚Ä¢ Owner permissions</p>
                <div class="server-meta">
                    <span class="meta-item">Created: March 15, 2023</span>
                    <span class="meta-item">Bot added: April 2, 2023</span>
                    <span class="meta-item">Region: US East</span>
                </div>
            </div>
        </div>
        <div class="settings-actions">
            <button class="btn-secondary" onclick="exportSettings()">Export Settings</button>
            <button class="btn-secondary" onclick="importSettings()">Import Settings</button>
            <button class="btn-primary" onclick="saveSettings()">Save All Changes</button>
        </div>
    </div>

    <!-- Settings Navigation -->
    <div class="settings-nav">
        <button class="nav-tab active" onclick="showSection('general')" data-section="general">
            <span>‚öôÔ∏è</span> General
        </button>
        <button class="nav-tab" onclick="showSection('autoroles')" data-section="autoroles">
            <span>üé≠</span> Auto-Roles
        </button>
        <button class="nav-tab" onclick="showSection('welcome')" data-section="welcome">
            <span>üëã</span> Welcome
        </button>
        <button class="nav-tab" onclick="showSection('commands')" data-section="commands">
            <span>‚å®Ô∏è</span> Commands
        </button>
        <button class="nav-tab" onclick="showSection('notifications')" data-section="notifications">
            <span>üîî</span> Notifications
        </button>
        <button class="nav-tab" onclick="showSection('permissions')" data-section="permissions">
            <span>üîê</span> Permissions
        </button>
    </div>

    <!-- General Settings -->
    <div class="settings-section active" id="general-section">
        <h3>General Settings</h3>
        
        <div class="settings-group">
            <div class="setting-item">
                <div class="setting-header">
                    <h4>Bot Status</h4>
                    <label class="toggle-switch">
                        <input type="checkbox" checked onchange="toggleBotStatus(this.checked)">
                        <span class="slider"></span>
                    </label>
                </div>
                <p>Enable or disable the BikeNode bot in your server</p>
            </div>

            <div class="setting-item">
                <div class="setting-header">
                    <h4>Command Prefix</h4>
                    <div class="setting-input-group">
                        <input type="text" value="!" class="setting-input" maxlength="3">
                        <span class="input-note">Max 3 characters</span>
                    </div>
                </div>
                <p>Custom prefix for text commands (slash commands don't require prefix)</p>
            </div>

            <div class="setting-item">
                <div class="setting-header">
                    <h4>Server Language</h4>
                    <select class="setting-select">
                        <option value="en" selected>English</option>
                        <option value="es">Espa√±ol</option>
                        <option value="fr">Fran√ßais</option>
                        <option value="de">Deutsch</option>
                        <option value="pt">Portugu√™s</option>
                    </select>
                </div>
                <p>Language for bot responses and messages</p>
            </div>

            <div class="setting-item">
                <div class="setting-header">
                    <h4>Timezone</h4>
                    <select class="setting-select">
                        <option value="UTC-8">Pacific Time (UTC-8)</option>
                        <option value="UTC-7">Mountain Time (UTC-7)</option>
                        <option value="UTC-6">Central Time (UTC-6)</option>
                        <option value="UTC-5" selected>Eastern Time (UTC-5)</option>
                        <option value="UTC">UTC</option>
                        <option value="UTC+1">Central European Time (UTC+1)</option>
                    </select>
                </div>
                <p>Timezone for scheduled events and timestamps</p>
            </div>

            <div class="setting-item">
                <div class="setting-header">
                    <h4>Default Units</h4>
                    <div class="radio-group">
                        <label class="radio-label">
                            <input type="radio" name="units" value="metric">
                            <span class="radio-custom"></span>
                            Metric (km/h, kg, cm)
                        </label>
                        <label class="radio-label">
                            <input type="radio" name="units" value="imperial" checked>
                            <span class="radio-custom"></span>
                            Imperial (mph, lbs, ft)
                        </label>
                    </div>
                </div>
                <p>Default measurement units for bike specifications</p>
            </div>
        </div>
    </div>

    <!-- Auto-Roles Settings -->
    <div class="settings-section" id="autoroles-section">
        <h3>Auto-Role Settings</h3>
        
        <div class="settings-group">
            <div class="setting-item">
                <div class="setting-header">
                    <h4>Auto-Role Assignment</h4>
                    <label class="toggle-switch">
                        <input type="checkbox" checked onchange="toggleAutoRoles(this.checked)">
                        <span class="slider"></span>
                    </label>
                </div>
                <p>Automatically assign roles based on user's virtual garage</p>
            </div>

            <div class="autorole-config" id="autoroleConfig">
                <div class="role-types-section">
                    <h4>Role Assignment Types</h4>
                    <div class="role-types-grid">
                        <div class="role-type-card">
                            <label class="checkbox-card">
                                <input type="checkbox" name="roleTypes" value="make" checked>
                                <div class="card-content">
                                    <h5>By Make</h5>
                                    <p>Assign roles based on bike manufacturer</p>
                                    <div class="examples">@Yamaha, @Honda, @Trek</div>
                                </div>
                            </label>
                        </div>

                        <div class="role-type-card">
                            <label class="checkbox-card">
                                <input type="checkbox" name="roleTypes" value="type" checked>
                                <div class="card-content">
                                    <h5>By Type</h5>
                                    <p>Assign roles based on bike category</p>
                                    <div class="examples">@SportBike, @MTB, @Cruiser</div>
                                </div>
                            </label>
                        </div>

                        <div class="role-type-card">
                            <label class="checkbox-card">
                                <input type="checkbox" name="roleTypes" value="year">
                                <div class="card-content">
                                    <h5>By Year</h5>
                                    <p>Assign roles based on model year</p>
                                    <div class="examples">@2024Rider, @2023Rider</div>
                                </div>
                            </label>
                        </div>

                        <div class="role-type-card">
                            <label class="checkbox-card">
                                <input type="checkbox" name="roleTypes" value="makemodel">
                                <div class="card-content">
                                    <h5>Make + Model</h5>
                                    <p>Specific bike model roles</p>
                                    <div class="examples">@YamahaR1, @TrekFuelEX</div>
                                </div>
                            </label>
                        </div>
                    </div>
                </div>

                <div class="role-behavior-section">
                    <h4>Role Behavior</h4>
                    <div class="behavior-grid">
                        <div class="setting-item">
                            <label>Assignment Trigger</label>
                            <select class="setting-select">
                                <option value="garage-add" selected>When bike added to garage</option>
                                <option value="manual">Manual assignment only</option>
                                <option value="join">On server join (if garage exists)</option>
                            </select>
                        </div>

                        <div class="setting-item">
                            <label>Multiple Bikes</label>
                            <select class="setting-select">
                                <option value="all" selected>Assign all applicable roles</option>
                                <option value="primary">Only primary bike role</option>
                                <option value="latest">Only latest bike role</option>
                            </select>
                        </div>

                        <div class="setting-item">
                            <label>Role Removal</label>
                            <select class="setting-select">
                                <option value="auto" selected>Auto-remove when bike removed</option>
                                <option value="manual">Manual removal only</option>
                                <option value="keep">Keep roles permanently</option>
                            </select>
                        </div>

                        <div class="setting-item">
                            <label>Role Prefix</label>
                            <input type="text" class="setting-input" placeholder="e.g., üèçÔ∏è" maxlength="5">
                        </div>

                        <div class="setting-item">
                            <label>Auto-Create Roles</label>
                            <label class="toggle-switch small">
                                <input type="checkbox" checked>
                                <span class="slider"></span>
                            </label>
                        </div>

                        <div class="setting-item">
                            <label>Assignment Delay</label>
                            <select class="setting-select">
                                <option value="instant" selected>Instant</option>
                                <option value="5min">5 minutes</option>
                                <option value="1hour">1 hour</option>
                                <option value="24hour">24 hours</option>
                            </select>
                        </div>
                    </div>
                </div>

                <div class="role-colors-section">
                    <h4>Role Colors</h4>
                    <div class="color-options">
                        <label class="radio-label">
                            <input type="radio" name="roleColors" value="none" checked>
                            <span class="radio-custom"></span>
                            No colors (default)
                        </label>
                        <label class="radio-label">
                            <input type="radio" name="roleColors" value="auto">
                            <span class="radio-custom"></span>
                            Auto-assign colors
                        </label>
                        <label class="radio-label">
                            <input type="radio" name="roleColors" value="brand">
                            <span class="radio-custom"></span>
                            Match brand colors
                        </label>
                        <label class="radio-label">
                            <input type="radio" name="roleColors" value="type">
                            <span class="radio-custom"></span>
                            Match bike type colors
                        </label>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Welcome Settings -->
    <div class="settings-section" id="welcome-section">
        <h3>Welcome & Onboarding</h3>
        
        <div class="settings-group">
            <div class="setting-item">
                <div class="setting-header">
                    <h4>Welcome Messages</h4>
                    <label class="toggle-switch">
                        <input type="checkbox" checked onchange="toggleWelcome(this.checked)">
                        <span class="slider"></span>
                    </label>
                </div>
                <p>Send welcome messages when new members join</p>
            </div>

            <div class="welcome-config" id="welcomeConfig">
                <div class="setting-item">
                    <label>Welcome Channel</label>
                    <select class="setting-select">
                        <option value="general">#general</option>
                        <option value="welcome" selected>#welcome</option>
                        <option value="new-members">#new-members</option>
                        <option value="introductions">#introductions</option>
                    </select>
                </div>

                <div class="setting-item">
                    <label>Welcome Message</label>
                    <textarea class="setting-textarea" rows="4" placeholder="Welcome {user} to {server}! Check out our bike community and add your rides to your garage with /garage add">Welcome {user} to {server}! üèçÔ∏è

Ready to show off your rides? Add your bikes to your virtual garage with `/garage add` and get automatic roles based on your bikes!

Check out #garage-showcase to see what others are riding!</textarea>
                    <div class="message-variables">
                        <span class="variable">{user}</span> - Mentions the new user
                        <span class="variable">{server}</span> - Server name
                        <span class="variable">{memberCount}</span> - Total members
                    </div>
                </div>

                <div class="setting-item">
                    <div class="setting-header">
                        <h4>Welcome DM</h4>
                        <label class="toggle-switch small">
                            <input type="checkbox">
                            <span class="slider"></span>
                        </label>
                    </div>
                    <p>Send a private welcome message to new members</p>
                </div>

                <div class="setting-item">
                    <div class="setting-header">
                        <h4>Auto-Role on Join</h4>
                        <select class="setting-select">
                            <option value="none" selected>No auto-role</option>
                            <option value="member">@Member</option>
                            <option value="rider">@Rider</option>
                            <option value="newbie">@Newbie</option>
                        </select>
                    </div>
                    <p>Automatically assign a role to all new members</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Commands Settings -->
    <div class="settings-section" id="commands-section">
        <h3>Command Settings</h3>
        
        <div class="settings-group">
            <div class="commands-list">
                <div class="command-setting">
                    <div class="command-info">
                        <h4>/garage</h4>
                        <p>Virtual garage management commands</p>
                    </div>
                    <div class="command-controls">
                        <label class="toggle-switch">
                            <input type="checkbox" checked>
                            <span class="slider"></span>
                        </label>
                        <button class="btn-icon-small" onclick="configureCommand('garage')">‚öôÔ∏è</button>
                    </div>
                </div>

                <div class="command-setting">
                    <div class="command-info">
                        <h4>/bike</h4>
                        <p>Bike search and comparison commands</p>
                    </div>
                    <div class="command-controls">
                        <label class="toggle-switch">
                            <input type="checkbox" checked>
                            <span class="slider"></span>
                        </label>
                        <button class="btn-icon-small" onclick="configureCommand('bike')">‚öôÔ∏è</button>
                    </div>
                </div>

                <div class="command-setting">
                    <div class="command-info">
                        <h4>/roles</h4>
                        <p>Role management commands</p>
                    </div>
                    <div class="command-controls">
                        <label class="toggle-switch">
                            <input type="checkbox" checked>
                            <span class="slider"></span>
                        </label>
                        <button class="btn-icon-small" onclick="configureCommand('roles')">‚öôÔ∏è</button>
                    </div>
                </div>

                <div class="command-setting">
                    <div class="command-info">
                        <h4>/events</h4>
                        <p>Community event creation and management</p>
                    </div>
                    <div class="command-controls">
                        <label class="toggle-switch">
                            <input type="checkbox">
                            <span class="slider"></span>
                        </label>
                        <button class="btn-icon-small" onclick="configureCommand('events')">‚öôÔ∏è</button>
                    </div>
                </div>

                <div class="command-setting">
                    <div class="command-info">
                        <h4>/mod</h4>
                        <p>Moderation commands</p>
                    </div>
                    <div class="command-controls">
                        <label class="toggle-switch">
                            <input type="checkbox" checked>
                            <span class="slider"></span>
                        </label>
                        <button class="btn-icon-small" onclick="configureCommand('mod')">‚öôÔ∏è</button>
                    </div>
                </div>
            </div>

            <div class="setting-item">
                <div class="setting-header">
                    <h4>Command Cooldowns</h4>
                    <select class="setting-select">
                        <option value="none">No cooldowns</option>
                        <option value="light" selected>Light (3 seconds)</option>
                        <option value="moderate">Moderate (5 seconds)</option>
                        <option value="strict">Strict (10 seconds)</option>
                    </select>
                </div>
                <p>Prevent command spam with cooldown periods</p>
            </div>

            <div class="setting-item">
                <div class="setting-header">
                    <h4>Error Messages</h4>
                    <label class="toggle-switch">
                        <input type="checkbox" checked>
                        <span class="slider"></span>
                    </label>
                </div>
                <p>Show detailed error messages when commands fail</p>
            </div>
        </div>
    </div>

    <!-- Notifications Settings -->
    <div class="settings-section" id="notifications-section">
        <h3>Notifications & Updates</h3>
        
        <div class="settings-group">
            <div class="setting-item">
                <div class="setting-header">
                    <h4>Update Notifications</h4>
                    <label class="toggle-switch">
                        <input type="checkbox" checked>
                        <span class="slider"></span>
                    </label>
                </div>
                <p>Get notified about bot updates and new features</p>
            </div>

            <div class="setting-item">
                <label>Notification Channel</label>
                <select class="setting-select">
                    <option value="none">No notifications</option>
                    <option value="general">#general</option>
                    <option value="announcements" selected>#announcements</option>
                    <option value="bot-updates">#bot-updates</option>
                </select>
            </div>

            <div class="notification-types">
                <h4>Notification Types</h4>
                
                <div class="notification-item">
                    <div class="notification-info">
                        <h5>New Features</h5>
                        <p>Bot feature updates and additions</p>
                    </div>
                    <label class="toggle-switch small">
                        <input type="checkbox" checked>
                        <span class="slider"></span>
                    </label>
                </div>

                <div class="notification-item">
                    <div class="notification-info">
                        <h5>Maintenance</h5>
                        <p>Scheduled maintenance and downtime</p>
                    </div>
                    <label class="toggle-switch small">
                        <input type="checkbox" checked>
                        <span class="slider"></span>
                    </label>
                </div>

                <div class="notification-item">
                    <div class="notification-info">
                        <h5>Database Updates</h5>
                        <p>New bikes added to the database</p>
                    </div>
                    <label class="toggle-switch small">
                        <input type="checkbox">
                        <span class="slider"></span>
                    </label>
                </div>

                <div class="notification-item">
                    <div class="notification-info">
                        <h5>Community Highlights</h5>
                        <p>Featured community content and achievements</p>
                    </div>
                    <label class="toggle-switch small">
                        <input type="checkbox">
                        <span class="slider"></span>
                    </label>
                </div>
            </div>
        </div>
    </div>

    <!-- Permissions Settings -->
    <div class="settings-section" id="permissions-section">
        <h3>Permissions & Security</h3>
        
        <div class="settings-group">
            <div class="permissions-overview">
                <h4>Bot Permissions</h4>
                <div class="permissions-grid">
                    <div class="permission-item granted">
                        <span class="permission-icon">‚úÖ</span>
                        <span>Send Messages</span>
                    </div>
                    <div class="permission-item granted">
                        <span class="permission-icon">‚úÖ</span>
                        <span>Manage Roles</span>
                    </div>
                    <div class="permission-item granted">
                        <span class="permission-icon">‚úÖ</span>
                        <span>Read Message History</span>
                    </div>
                    <div class="permission-item granted">
                        <span class="permission-icon">‚úÖ</span>
                        <span>Use Slash Commands</span>
                    </div>
                    <div class="permission-item missing">
                        <span class="permission-icon">‚ùå</span>
                        <span>Manage Messages</span>
                    </div>
                    <div class="permission-item missing">
                        <span class="permission-icon">‚ùå</span>
                        <span>Kick Members</span>
                    </div>
                </div>
                <button class="btn-secondary" onclick="requestPermissions()">Request Missing Permissions</button>
            </div>

            <div class="role-restrictions">
                <h4>Role Restrictions</h4>
                <div class="restriction-item">
                    <label>Minimum Role for Moderation Commands</label>
                    <select class="setting-select">
                        <option value="none">No restriction</option>
                        <option value="moderator" selected>@Moderator</option>
                        <option value="admin">@Admin</option>
                        <option value="owner">Owner only</option>
                    </select>
                </div>

                <div class="restriction-item">
                    <label>Minimum Role for Event Creation</label>
                    <select class="setting-select">
                        <option value="none">No restriction</option>
                        <option value="member">@Member</option>
                        <option value="moderator" selected>@Moderator</option>
                        <option value="admin">@Admin</option>
                    </select>
                </div>
            </div>

            <div class="channel-restrictions">
                <h4>Channel Restrictions</h4>
                <div class="restriction-item">
                    <label>Allowed Channels for Commands</label>
                    <div class="channel-list">
                        <label class="checkbox-label">
                            <input type="checkbox" checked>
                            <span class="checkmark"></span>
                            #general
                        </label>
                        <label class="checkbox-label">
                            <input type="checkbox" checked>
                            <span class="checkmark"></span>
                            #bot-commands
                        </label>
                        <label class="checkbox-label">
                            <input type="checkbox">
                            <span class="checkmark"></span>
                            #garage-showcase
                        </label>
                        <label class="checkbox-label">
                            <input type="checkbox">
                            <span class="checkmark"></span>
                            #off-topic
                        </label>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Save Button -->
    <div class="settings-footer">
        <div class="save-status" id="saveStatus"></div>
        <button class="btn-primary btn-large" onclick="saveSettings()">
            <span>üíæ</span>
            Save All Settings
        </button>
    </div>
</div>

<script>
// Settings navigation
function showSection(sectionName) {
    // Hide all sections
    document.querySelectorAll('.settings-section').forEach(section => {
        section.classList.remove('active');
    });
    
    // Remove active class from all tabs
    document.querySelectorAll('.nav-tab').forEach(tab => {
        tab.classList.remove('active');
    });
    
    // Show selected section
    document.getElementById(sectionName + '-section').classList.add('active');
    document.querySelector(`[data-section="${sectionName}"]`).classList.add('active');
}

// Toggle functions
function toggleBotStatus(enabled) {
    const status = enabled ? 'enabled' : 'disabled';
    showNotification(`Bot ${status} successfully`, 'success');
}

function toggleAutoRoles(enabled) {
    const config = document.getElementById('autoroleConfig');
    if (enabled) {
        config.style.display = 'block';
        config.style.opacity = '1';
    } else {
        config.style.opacity = '0.5';
        config.style.pointerEvents = 'none';
    }
}

function toggleWelcome(enabled) {
    const config = document.getElementById('welcomeConfig');
    if (enabled) {
        config.style.display = 'block';
        config.style.opacity = '1';
    } else {
        config.style.opacity = '0.5';
        config.style.pointerEvents = 'none';
    }
}

// Command configuration
function configureCommand(commandName) {
    alert(`Configure ${commandName} command - feature coming soon`);
}

// Settings management
function saveSettings() {
    const saveBtn = document.querySelector('.settings-footer .btn-primary');
    const original = saveBtn.innerHTML;
    
    saveBtn.innerHTML = '<span>‚è≥</span>Saving...';
    saveBtn.disabled = true;
    
    setTimeout(() => {
        saveBtn.innerHTML = '<span>‚úÖ</span>Settings Saved!';
        showNotification('All settings saved successfully', 'success');
        
        setTimeout(() => {
            saveBtn.innerHTML = original;
            saveBtn.disabled = false;
        }, 2000);
    }, 1500);
}

function exportSettings() {
    // Simulate export
    const settings = {
        general: { prefix: '!', language: 'en', timezone: 'UTC-5' },
        autoRoles: { enabled: true, types: ['make', 'type'] },
        welcome: { enabled: true, channel: 'welcome' }
    };
    
    const blob = new Blob([JSON.stringify(settings, null, 2)], { type: 'application/json' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'bikenode-settings.json';
    a.click();
    URL.revokeObjectURL(url);
    
    showNotification('Settings exported successfully', 'success');
}

function importSettings() {
    const input = document.createElement('input');
    input.type = 'file';
    input.accept = '.json';
    input.onchange = (e) => {
        const file = e.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = (e) => {
                try {
                    const settings = JSON.parse(e.target.result);
                    showNotification('Settings imported successfully', 'success');
                } catch (error) {
                    showNotification('Invalid settings file', 'error');
                }
            };
            reader.readAsText(file);
        }
    };
    input.click();
}

function requestPermissions() {
    showNotification('Permission request sent to server administrators', 'info');
}

// Notification system
function showNotification(message, type = 'info') {
    const notification = document.createElement('div');
    notification.className = `notification ${type}`;
    notification.textContent = message;
    
    const container = document.getElementById('saveStatus');
    container.appendChild(notification);
    
    setTimeout(() => {
        notification.classList.add('show');
    }, 100);
    
    setTimeout(() => {
        notification.classList.remove('show');
        setTimeout(() => {
            container.removeChild(notification);
        }, 300);
    }, 3000);
}

// Auto-save on input change
document.addEventListener('input', (e) => {
    if (e.target.matches('.setting-input, .setting-select, .setting-textarea')) {
        // Show unsaved changes indicator
        const footer = document.querySelector('.settings-footer');
        footer.classList.add('has-changes');
    }
});

// Initialize tooltips and help text
document.addEventListener('DOMContentLoaded', () => {
    // Add any initialization code here
});
</script>

<style>
.settings-content {
    max-width: 1000px;
}

.server-info-header {
    background: var(--card-bg);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 12px;
    padding: 24px;
    margin-bottom: 24px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 24px;
}

.server-display {
    display: flex;
    align-items: center;
    gap: 20px;
}

.server-icon-large {
    width: 80px;
    height: 80px;
    background: var(--accent);
    border-radius: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-weight: 700;
    font-size: 2rem;
}

.server-details h2 {
    color: var(--text-primary);
    margin: 0 0 8px 0;
    font-size: 1.5rem;
}

.server-details p {
    color: var(--text-secondary);
    margin: 0 0 8px 0;
}

.server-meta {
    display: flex;
    gap: 16px;
    flex-wrap: wrap;
}

.meta-item {
    color: var(--text-secondary);
    font-size: 0.8rem;
    background: rgba(255, 255, 255, 0.05);
    padding: 4px 8px;
    border-radius: 6px;
}

.settings-actions {
    display: flex;
    gap: 12px;
    flex-wrap: wrap;
}

.settings-nav {
    display: flex;
    gap: 4px;
    margin-bottom: 32px;
    background: var(--card-bg);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 12px;
    padding: 6px;
    overflow-x: auto;
}

.nav-tab {
    background: none;
    border: none;
    color: var(--text-secondary);
    padding: 12px 16px;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.2s ease;
    white-space: nowrap;
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 14px;
}

.nav-tab:hover {
    background: rgba(255, 255, 255, 0.05);
    color: var(--text-primary);
}

.nav-tab.active {
    background: var(--accent);
    color: white;
}

.settings-section {
    display: none;
    background: var(--card-bg);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 12px;
    padding: 32px;
    margin-bottom: 24px;
}

.settings-section.active {
    display: block;
}

.settings-section h3 {
    color: var(--text-primary);
    margin: 0 0 24px 0;
    font-size: 1.5rem;
    border-bottom: 2px solid rgba(255, 255, 255, 0.1);
    padding-bottom: 12px;
}

.settings-group {
    display: flex;
    flex-direction: column;
    gap: 24px;
}

.setting-item {
    display: flex;
    flex-direction: column;
    gap: 8px;
}

.setting-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.setting-item h4 {
    color: var(--text-primary);
    margin: 0;
    font-size: 1rem;
}

.setting-item p {
    color: var(--text-secondary);
    margin: 0;
    font-size: 0.9rem;
    line-height: 1.4;
}

.setting-item label:not(.toggle-switch):not(.radio-label):not(.checkbox-label) {
    color: var(--text-primary);
    font-weight: 500;
    margin-bottom: 4px;
}

.setting-input,
.setting-select,
.setting-textarea {
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.2);
    color: var(--text-primary);
    padding: 10px 12px;
    border-radius: 6px;
    font-size: 14px;
    transition: border-color 0.2s ease;
}

.setting-input:focus,
.setting-select:focus,
.setting-textarea:focus {
    outline: none;
    border-color: var(--accent);
}

.setting-input-group {
    display: flex;
    align-items: center;
    gap: 8px;
}

.input-note {
    color: var(--text-secondary);
    font-size: 0.8rem;
}

.toggle-switch {
    position: relative;
    width: 44px;
    height: 24px;
}

.toggle-switch.small {
    width: 32px;
    height: 18px;
}

.toggle-switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(255, 255, 255, 0.2);
    transition: 0.2s;
    border-radius: 24px;
}

.slider:before {
    position: absolute;
    content: "";
    height: 18px;
    width: 18px;
    left: 3px;
    bottom: 3px;
    background-color: white;
    transition: 0.2s;
    border-radius: 50%;
}

.toggle-switch.small .slider:before {
    height: 12px;
    width: 12px;
}

input:checked + .slider {
    background-color: var(--accent);
}

input:checked + .slider:before {
    transform: translateX(20px);
}

.toggle-switch.small input:checked + .slider:before {
    transform: translateX(14px);
}

.radio-group,
.color-options {
    display: flex;
    flex-direction: column;
    gap: 8px;
}

.radio-label {
    display: flex;
    align-items: center;
    gap: 8px;
    color: var(--text-secondary);
    cursor: pointer;
    padding: 8px 0;
}

.radio-custom {
    width: 16px;
    height: 16px;
    border: 2px solid rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    position: relative;
}

.radio-label input[type="radio"] {
    display: none;
}

.radio-label input:checked + .radio-custom {
    border-color: var(--accent);
}

.radio-label input:checked + .radio-custom::after {
    content: '';
    position: absolute;
    top: 2px;
    left: 2px;
    width: 8px;
    height: 8px;
    background: var(--accent);
    border-radius: 50%;
}

.autorole-config,
.welcome-config {
    margin-top: 16px;
    padding: 20px;
    background: rgba(255, 255, 255, 0.02);
    border: 1px solid rgba(255, 255, 255, 0.05);
    border-radius: 8px;
}

.role-types-section h4,
.role-behavior-section h4,
.role-colors-section h4 {
    color: var(--text-primary);
    margin: 0 0 16px 0;
    font-size: 1.1rem;
}

.role-types-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 16px;
    margin-bottom: 24px;
}

.role-type-card {
    background: rgba(255, 255, 255, 0.02);
    border: 2px solid rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    overflow: hidden;
    transition: all 0.2s ease;
}

.checkbox-card {
    display: block;
    cursor: pointer;
}

.checkbox-card input {
    display: none;
}

.card-content {
    padding: 16px;
}

.card-content h5 {
    color: var(--text-primary);
    margin: 0 0 8px 0;
    font-size: 0.9rem;
}

.card-content p {
    color: var(--text-secondary);
    margin: 0 0 8px 0;
    font-size: 0.8rem;
}

.examples {
    font-family: 'Courier New', monospace;
    font-size: 0.7rem;
    color: var(--accent);
    background: rgba(88, 101, 242, 0.1);
    padding: 4px 8px;
    border-radius: 4px;
}

.checkbox-card input:checked + .card-content {
    background: rgba(88, 101, 242, 0.1);
}

.role-type-card:has(input:checked) {
    border-color: var(--accent);
}

.behavior-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 16px;
    margin-bottom: 24px;
}

.message-variables {
    display: flex;
    gap: 8px;
    flex-wrap: wrap;
    margin-top: 8px;
}

.variable {
    background: rgba(88, 101, 242, 0.1);
    color: var(--accent);
    padding: 2px 6px;
    border-radius: 4px;
    font-family: 'Courier New', monospace;
    font-size: 0.7rem;
}

.commands-list {
    display: flex;
    flex-direction: column;
    gap: 16px;
    margin-bottom: 24px;
}

.command-setting {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 16px;
    background: rgba(255, 255, 255, 0.02);
    border: 1px solid rgba(255, 255, 255, 0.05);
    border-radius: 8px;
}

.command-info h4 {
    color: var(--text-primary);
    margin: 0 0 4px 0;
    font-family: 'Courier New', monospace;
}

.command-info p {
    color: var(--text-secondary);
    margin: 0;
    font-size: 0.9rem;
}

.command-controls {
    display: flex;
    align-items: center;
    gap: 12px;
}

.btn-icon-small {
    background: none;
    border: none;
    padding: 6px;
    border-radius: 4px;
    cursor: pointer;
    opacity: 0.6;
    transition: all 0.2s;
}

.btn-icon-small:hover {
    opacity: 1;
    background: rgba(255, 255, 255, 0.1);
}

.notification-types {
    margin-top: 20px;
}

.notification-types h4 {
    color: var(--text-primary);
    margin: 0 0 16px 0;
    font-size: 1.1rem;
}

.notification-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 12px 0;
    border-bottom: 1px solid rgba(255, 255, 255, 0.05);
}

.notification-item:last-child {
    border-bottom: none;
}

.notification-info h5 {
    color: var(--text-primary);
    margin: 0 0 4px 0;
    font-size: 0.9rem;
}

.notification-info p {
    color: var(--text-secondary);
    margin: 0;
    font-size: 0.8rem;
}

.permissions-overview {
    margin-bottom: 24px;
}

.permissions-overview h4 {
    color: var(--text-primary);
    margin: 0 0 16px 0;
    font-size: 1.1rem;
}

.permissions-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 12px;
    margin-bottom: 16px;
}

.permission-item {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 8px 12px;
    border-radius: 6px;
    font-size: 0.9rem;
}

.permission-item.granted {
    background: rgba(16, 185, 129, 0.1);
    color: #10b981;
}

.permission-item.missing {
    background: rgba(239, 68, 68, 0.1);
    color: #ef4444;
}

.role-restrictions,
.channel-restrictions {
    margin-bottom: 24px;
}

.role-restrictions h4,
.channel-restrictions h4 {
    color: var(--text-primary);
    margin: 0 0 16px 0;
    font-size: 1.1rem;
}

.restriction-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 12px;
}

.restriction-item label {
    color: var(--text-primary);
    font-weight: 500;
}

.channel-list {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 8px;
}

.checkbox-label {
    display: flex;
    align-items: center;
    gap: 8px;
    color: var(--text-secondary);
    cursor: pointer;
    padding: 4px 0;
}

.checkbox-label input[type="checkbox"] {
    display: none;
}

.checkmark {
    width: 16px;
    height: 16px;
    border: 2px solid rgba(255, 255, 255, 0.3);
    border-radius: 3px;
    position: relative;
}

.checkbox-label input:checked + .checkmark {
    background: var(--accent);
    border-color: var(--accent);
}

.checkbox-label input:checked + .checkmark::after {
    content: '‚úì';
    position: absolute;
    top: -2px;
    left: 2px;
    color: white;
    font-size: 12px;
    font-weight: bold;
}

.settings-footer {
    position: sticky;
    bottom: 0;
    background: var(--card-bg);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 12px;
    padding: 20px 24px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 24px;
}

.settings-footer.has-changes {
    border-color: var(--accent);
}

.btn-large {
    padding: 16px 32px;
    font-size: 16px;
    font-weight: 600;
    display: flex;
    align-items: center;
    gap: 8px;
}

.save-status {
    position: relative;
}

.notification {
    position: absolute;
    right: 0;
    bottom: 100%;
    margin-bottom: 8px;
    padding: 8px 16px;
    border-radius: 6px;
    font-size: 0.9rem;
    opacity: 0;
    transform: translateY(10px);
    transition: all 0.3s ease;
    white-space: nowrap;
}

.notification.show {
    opacity: 1;
    transform: translateY(0);
}

.notification.success {
    background: rgba(16, 185, 129, 0.1);
    color: #10b981;
    border: 1px solid rgba(16, 185, 129, 0.3);
}

.notification.error {
    background: rgba(239, 68, 68, 0.1);
    color: #ef4444;
    border: 1px solid rgba(239, 68, 68, 0.3);
}

.notification.info {
    background: rgba(88, 101, 242, 0.1);
    color: var(--accent);
    border: 1px solid rgba(88, 101, 242, 0.3);
}

@media (max-width: 768px) {
    .server-info-header {
        flex-direction: column;
        align-items: stretch;
        gap: 16px;
    }
    
    .server-display {
        justify-content: center;
        text-align: center;
    }
    
    .settings-actions {
        justify-content: center;
    }
    
    .settings-nav {
        overflow-x: auto;
    }
    
    .setting-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 8px;
    }
    
    .role-types-grid {
        grid-template-columns: 1fr;
    }
    
    .behavior-grid {
        grid-template-columns: 1fr;
    }
    
    .command-setting {
        flex-direction: column;
        align-items: flex-start;
        gap: 12px;
    }
    
    .permissions-grid {
        grid-template-columns: 1fr;
    }
    
    .restriction-item {
        flex-direction: column;
        align-items: flex-start;
        gap: 8px;
    }
    
    .settings-footer {
        flex-direction: column;
        gap: 16px;
    }
}
</style>