version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cabin-motorcycles-db
    environment:
      POSTGRES_DB: ${DB_NAME:-bikenode}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: cabin-motorcycles-cache
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Cabin Motorcycles Scrapers
  scrapers:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cabin-motorcycles-scrapers
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_NAME: ${DB_NAME:-bikenode}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      LOG_LEVEL: ${LOG_LEVEL:-info}
      SCRAPER_USER_AGENT: ${SCRAPER_USER_AGENT:-Mozilla/5.0 (compatible; CabinMotorcycleScraper/1.0)}
      SCRAPER_TIMEOUT: ${SCRAPER_TIMEOUT:-30000}
      SCRAPER_RETRY_ATTEMPTS: ${SCRAPER_RETRY_ATTEMPTS:-3}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./debug:/app/debug
      - ./scrapers:/app/scrapers
      - ./lib:/app/lib
      - ./shared:/app/shared
    ports:
      - "${SCRAPER_PORT:-3000}:3000"
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # API Server (reference configuration)
  api:
    image: bikenode/api-server:latest
    container_name: cabin-motorcycles-api
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      PORT: ${API_PORT:-8080}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_NAME: ${DB_NAME:-bikenode}
      REDIS_URL: redis://redis:6379
      RATE_LIMIT_ENABLED: ${RATE_LIMIT_ENABLED:-true}
      CACHE_ENABLED: ${CACHE_ENABLED:-true}
      LOG_LEVEL: ${LOG_LEVEL:-info}
    ports:
      - "${API_PORT:-8080}:8080"
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx (optional, for production)
  nginx:
    image: nginx:alpine
    container_name: cabin-motorcycles-nginx
    depends_on:
      - api
      - scrapers
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: cabin-motorcycles-network